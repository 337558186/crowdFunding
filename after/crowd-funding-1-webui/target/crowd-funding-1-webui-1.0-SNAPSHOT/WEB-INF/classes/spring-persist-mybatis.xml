<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


    <!--开启注解扫描，要扫描service和dao层的注解，忽略controller层注解让SpringMVC框架去管理-->
    <context:component-scan base-package="cn.cf" >
        <!--那些注解不扫描   controller注解不扫描-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 引入外部数据库的配置文件，location位置填写的是相对位置 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--配置数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql:///crowdfunding1"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--配置sqlSessionFactory工厂-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--mybatis配置文件的位置  -->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
        <!--配置mapper配置文件的位置-->
        <property name="mapperLocations" value="classpath:mybatis/mapper/*.xml" />
        <!--装配数据源-->
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!--配置接口mapper所在的包    生产哪些代理对象-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.cf.mapper"/>
    </bean>

</beans>